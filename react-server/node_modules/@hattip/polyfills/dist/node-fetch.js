import {
  install
} from "./chunk-QQ5SZQCL.js";

// src/node-fetch.ts
import * as nodeFetch from "node-fetch-native";
import { Readable } from "stream";
function install2() {
  function define(name, value = nodeFetch[name]) {
    if (!globalThis[name]) {
      Object.defineProperty(globalThis, name, {
        value,
        configurable: true
      });
    }
  }
  define("AbortController");
  define("Blob");
  define("File");
  define("FormData");
  define("Headers");
  if (globalThis.Request) {
    install();
  } else {
    define("Request");
  }
  if (globalThis.Response)
    return;
  class Response2 extends nodeFetch.Response {
    constructor(input, init) {
      if (input instanceof ReadableStream) {
        input = Readable.from(input);
      }
      super(input, init);
    }
  }
  Object.defineProperty(Response2, "name", {
    value: "Response",
    writable: false
  });
  define("Response", Response2);
  define(
    "fetch",
    (input, init) => nodeFetch.default(input, init).then((r) => {
      Object.setPrototypeOf(r, Response2.prototype);
      return r;
    })
  );
}
export {
  install2 as default
};
