import { RequestContext } from '@hattip/compose';
import { CookieSerializeOptions } from 'cookie';
export { CookieSerializeOptions } from 'cookie';

declare module "@hattip/compose" {
    interface RequestContextExtensions {
        /**
         * Outgoing cookies that will be added to the response. Typically you
         * shouldn't need touch this.
         */
        outgoingCookies: Array<{
            name: string;
            value: string;
            options?: CookieSerializeOptions;
        }>;
        /**
         * Set a cookie.
         *
         * @param name    The name of the cookie
         * @param value   The value of the cookie
         * @param options Options for the cookie
         */
        setCookie(name: string, value: string, options?: CookieSerializeOptions): void;
        /**
         * Delete a cookie.
         *
         * @param name    The name of the cookie
         * @param options Options for the cookie
         */
        deleteCookie(name: string, options?: CookieSerializeOptions): void;
    }
}

type CookieSerializerContext = Pick<RequestContext, "outgoingCookies" | "setCookie" | "deleteCookie" | "next">;
/**
 * Create a cookie serializer middleware.
 *
 * @param defaultOptions Default options for the cookie serializer
 *
 * @returns A middleware that will serialize cookies
 */
declare function cookieSerializer(defaultOptions?: CookieSerializeOptions): (ctx: CookieSerializerContext) => Promise<Response>;

export { CookieSerializerContext, cookieSerializer };
